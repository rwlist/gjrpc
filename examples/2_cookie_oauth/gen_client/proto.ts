// Code generated by gjrpc. DO NOT EDIT.

interface Transport {
    request(method: string, params: unknown): Promise<unknown>;
}

export interface API {
    Auth: Auth
}

export function buildImpl(transport: Transport): API {
    return {
        Auth: new AuthImpl(transport),
    }
}

export interface Auth {
    Oauth(): Promise<OAuthResponse>
    Status(): Promise<AuthStatus>
}

export class AuthImpl implements Auth {
    constructor(private transport: Transport) {}

    async Oauth(): Promise<OAuthResponse> {
        return await this.transport.request("auth.oauth", null) as OAuthResponse;
    }

    async Status(): Promise<AuthStatus> {
        return await this.transport.request("auth.status", null) as AuthStatus;
    }
}

export interface OAuthResponse {
    RedirectURL: string
}

export interface AuthStatus {
    Email: string
}
